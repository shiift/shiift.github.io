{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","data","this","props","siteTitle","site","siteMetadata","title","subtitle","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_us_web_design_standards__WEBPACK_IMPORTED_MODULE_1__","typography_theme_us_web_design_standards__WEBPACK_IMPORTED_MODULE_1___default","usWebDesignStandardsTheme","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","Layout","header","_this$props","children","pathname","titleComponent","style","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_1__","color","to","fontSize","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-70500dd6b2b6c015d9b8.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const subtitle = data.site.siteMetadata.subtitle\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} subtitle={subtitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>This page does not exist.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        subtitle\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport usWebDesignStandardsTheme from \"typography-theme-us-web-design-standards\"\n\nusWebDesignStandardsTheme.overrideThemeStyles = () => {\n\treturn {\n\t\t\"a.gatsby-resp-image-link\": {\n\t\t\tboxShadow: `none`,\n\t\t},\n\t}\n}\n\ndelete usWebDesignStandardsTheme.googleFonts\n\nconst typography = new Typography(usWebDesignStandardsTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n\ttypography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, subtitle, children } = this.props\n    // eslint-disable-next-line\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      const titleComponent = (\n        <h1\n          style={{\n            marginBottom: rhythm(0.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n      header = (\n        <div>\n          {titleComponent}\n          <h3>{subtitle}</h3>\n        </div>\n      )\n    } else {\n      const titleComponent = (\n        <h3\n          style={{\n            marginTop: 0,\n            marginBottom: rhythm(0.5),\n            fontSize: rhythm(1),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n      header = (\n        <div>\n          {titleComponent}\n          <h3\n            style={{\n              fontSize: rhythm(1/2),\n            }}\n          >\n            {subtitle}\n          </h3>\n        </div>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <hr />\n        <footer>\n          © {new Date().getFullYear()} Liam Dickson\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}